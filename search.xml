<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/10/09/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>InstallOSGEarth</title>
    <url>/2024/10/18/InstallOSGEarth/</url>
    <content><![CDATA[<h1 id="OSGEarth的安装"><a href="#OSGEarth的安装" class="headerlink" title="OSGEarth的安装"></a>OSGEarth的安装</h1><blockquote>
<p>根据能查到的博客及相关教程，分两大类方法。</p>
<ol>
<li>CMake 编译方法</li>
<li>vcpkg 安装方法</li>
</ol>
</blockquote>
<p>笔者在使用CMake编译方法遇到了大量的问题，使用VS编译时因为第三方库的问题，始终未能成功实现编译。在花费大量的时间后，转头使用vcpkg方法完成OSGEarth及其依赖项的安装。故在此进行记录安装过程，方便后续使用。</p>
<h2 id="1-安装vcpkg"><a href="#1-安装vcpkg" class="headerlink" title="1. 安装vcpkg"></a>1. 安装vcpkg</h2><p>首先，下载vcpkg并执行 bootstrap.bat 脚本。</p>
<blockquote>
<p>git clone <a href="https://github.com/microsoft/vcpkg">https://github.com/microsoft/vcpkg</a><br>.\vcpkg\bootstrap-vcpkg.bat</p>
</blockquote>
<p>vcpkg 的安装命令</p>
<blockquote>
<p>vcpkg install [packages to install]</p>
</blockquote>
<p>若您希望在 Visual Studio 中使用vcpkg，请运行以下命令 </p>
<blockquote>
<p>vcpkg integrate install</p>
</blockquote>
<h2 id="2-使用vcpkg安装OSGEarth"><a href="#2-使用vcpkg安装OSGEarth" class="headerlink" title="2.使用vcpkg安装OSGEarth"></a>2.使用vcpkg安装OSGEarth</h2><p>在使用vcpkg install OSGEarth 前，确保开启GL3编译</p>
<blockquote>
<p>[vcpkg安装目录]vcpkg\ports\osg\portfile.cmake 中<br>if(NOT DEFINED osg_OPENGL_PROFILEGL3)<br>        set(osg_OPENGL_PROFILEGL3 “GL2”) &#x2F;&#x2F;这里的GL2改为GL3<br>endif()</p>
</blockquote>
<p>在vcpkg的根目录中以打开CMD，并输入</p>
<blockquote>
<p>vcpkg install osgearth:x64-windows</p>
</blockquote>
<p>即可完成安装，是的，只要这一行指令就可以完成安装，相比之下，CMake简直是让人吐血。vcpkg 安装OSGEarth时，会自动安装OSGEarth所需的各种依赖项。</p>
<h2 id="3-安装过程中的问题"><a href="#3-安装过程中的问题" class="headerlink" title="3.安装过程中的问题"></a>3.安装过程中的问题</h2><p>安装依赖项时，vcpkg会先查看downloads目录，没有的话会从Github上下载包。</p>
<p><img src="/../images/Install1.png" alt="路径"></p>
]]></content>
  </entry>
  <entry>
    <title>Link</title>
    <url>/2024/10/16/Link/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
